/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.admin;

import controller.CustomerController;
import controller.PaymentAndReport;
import controller.ReservationController;
import controller.TableController;
import java.awt.Color;
import java.awt.Font;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Booking;
import model.Customer;
import model.Table;

/**
 *
 * @author Sachii
 */
public class AdminHome extends javax.swing.JFrame {    
    private int cusId = 0;
    
    public AdminHome() {
        initComponents();
       
        
        custable.getTableHeader().setFont(new Font("Times New Romans", Font.BOLD, 20));
        custable.getTableHeader().setOpaque(false);
        custable.getTableHeader().setBackground(new Color(32, 136, 203));
        custable.getTableHeader().setForeground(new Color(0,0,0));
        custable.setRowHeight(25);
       
        tableTable.getTableHeader().setFont(new Font("Times New Romans", Font.BOLD, 20));
        tableTable.getTableHeader().setOpaque(false);
        tableTable.getTableHeader().setBackground(new Color(32, 136, 203));
        tableTable.getTableHeader().setForeground(new Color(0,0,0));
        tableTable.setRowHeight(25);
        bookingtable.getTableHeader().setFont(new Font("Times New Romans", Font.BOLD, 14));
        bookingtable.getTableHeader().setOpaque(false);
        bookingtable.getTableHeader().setBackground(new Color(32, 136, 203));
        bookingtable.getTableHeader().setForeground(new Color(0,0,0));
        bookingtable.setRowHeight(25);
        
        displayCusTable(CustomerController.displayCus());
        displayTableTable(TableController.displayTables());
        displayBookingTable(ReservationController.getAllBookings());
        tablepanel.setVisible(false);
        cuspanel.setVisible(false);
        bookingPanel.setVisible(true);
        editBookingPanel.setVisible(false);
        genSlipPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookmanage = new javax.swing.JButton();
        tablemanage = new javax.swing.JButton();
        genSlipPanel = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        payBID = new javax.swing.JTextField();
        downSlipBtn = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        payDate = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        paySeatNo = new javax.swing.JTextField();
        cancelPayBookingbtn = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        payHours = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        payTableNo = new javax.swing.JTextField();
        paytime = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        payment = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        pstat = new javax.swing.JComboBox<>();
        bookingPanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        bookingtable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        bidField = new javax.swing.JTextField();
        cancelBtn = new javax.swing.JButton();
        bookingClearbtn = new javax.swing.JButton();
        fillterbox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        editbtn = new javax.swing.JButton();
        slipBtn = new javax.swing.JButton();
        GetBookings = new javax.swing.JButton();
        editBookingPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        editBID = new javax.swing.JTextField();
        editUpdateBtn = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        editDate = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        editSeatNo = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        cancelEditBookingbtn = new javax.swing.JButton();
        editStime = new javax.swing.JComboBox<>();
        editEtime = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        editPay = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        editTableNo = new javax.swing.JTextField();
        tablepanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        edittable = new javax.swing.JButton();
        tableremovebtn = new javax.swing.JButton();
        searchNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ttt = new javax.swing.JLabel();
        seatview = new javax.swing.JTextField();
        addtable = new javax.swing.JButton();
        ttt1 = new javax.swing.JLabel();
        tableNoview = new javax.swing.JTextField();
        clear2 = new javax.swing.JButton();
        cuspanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        custable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        cusBookingBtn = new javax.swing.JButton();
        cusRemoveBtn = new javax.swing.JButton();
        searchName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cuss = new javax.swing.JLabel();
        cusIdView = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        cusBookingBtn1 = new javax.swing.JButton();
        cusManage = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        logOutBtn1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bookmanage.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        bookmanage.setText("Booking Management");
        bookmanage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookmanageActionPerformed(evt);
            }
        });
        getContentPane().add(bookmanage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 300, 40));

        tablemanage.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        tablemanage.setText("Table Management");
        tablemanage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablemanageActionPerformed(evt);
            }
        });
        getContentPane().add(tablemanage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 300, 40));

        genSlipPanel.setBackground(new java.awt.Color(18, 18, 16));
        genSlipPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Payment Slip");
        genSlipPanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, -1, -1));

        jLabel35.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Bookig ID          :");
        genSlipPanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 178, -1));

        payBID.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payBID.setForeground(new java.awt.Color(102, 102, 102));
        genSlipPanel.add(payBID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 263, -1));

        downSlipBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        downSlipBtn.setText("Download");
        downSlipBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downSlipBtnActionPerformed(evt);
            }
        });
        genSlipPanel.add(downSlipBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 140, -1));

        jLabel36.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Seats                  :");
        genSlipPanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 178, -1));

        jLabel37.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Date                    :");
        genSlipPanel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 170, -1));

        payDate.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payDate.setForeground(new java.awt.Color(102, 102, 102));
        genSlipPanel.add(payDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 263, -1));

        jLabel38.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Payment  Status :");
        genSlipPanel.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 178, -1));

        paySeatNo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        paySeatNo.setForeground(new java.awt.Color(102, 102, 102));
        genSlipPanel.add(paySeatNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 263, -1));

        cancelPayBookingbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelPayBookingbtn.setText("Cancel");
        cancelPayBookingbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPayBookingbtnActionPerformed(evt);
            }
        });
        genSlipPanel.add(cancelPayBookingbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, -1, -1));

        jLabel40.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Time                    :");
        genSlipPanel.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 180, -1));

        payHours.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payHours.setForeground(new java.awt.Color(102, 102, 102));
        genSlipPanel.add(payHours, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 263, -1));

        jLabel41.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("TableNo             :");
        genSlipPanel.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 178, -1));

        payTableNo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payTableNo.setForeground(new java.awt.Color(102, 102, 102));
        genSlipPanel.add(payTableNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 263, -1));

        paytime.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        paytime.setForeground(new java.awt.Color(102, 102, 102));
        genSlipPanel.add(paytime, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 263, -1));

        jLabel39.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Hours                  :");
        genSlipPanel.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 178, -1));

        payment.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payment.setForeground(new java.awt.Color(102, 102, 102));
        genSlipPanel.add(payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, 263, -1));

        jLabel42.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Payment              :");
        genSlipPanel.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 178, -1));

        pstat.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        pstat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Paid" }));
        pstat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pstatActionPerformed(evt);
            }
        });
        genSlipPanel.add(pstat, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 260, 30));

        getContentPane().add(genSlipPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 490, 520));

        bookingPanel.setBackground(new java.awt.Color(18, 18, 16));
        bookingPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Booking Details");
        bookingPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 320, -1));

        bookingtable.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bookingtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Reservation ID", "Table No", "Seats", "Date", "Start Time", "End Time", "CustomerID", "Payment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookingtable.setShowHorizontalLines(true);
        bookingtable.setShowVerticalLines(true);
        bookingtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingtableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bookingtableMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(bookingtable);
        if (bookingtable.getColumnModel().getColumnCount() > 0) {
            bookingtable.getColumnModel().getColumn(0).setResizable(false);
            bookingtable.getColumnModel().getColumn(1).setResizable(false);
            bookingtable.getColumnModel().getColumn(2).setResizable(false);
            bookingtable.getColumnModel().getColumn(3).setResizable(false);
            bookingtable.getColumnModel().getColumn(4).setResizable(false);
            bookingtable.getColumnModel().getColumn(5).setResizable(false);
            bookingtable.getColumnModel().getColumn(7).setResizable(false);
        }

        bookingPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 970, 180));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Fillter :");
        bookingPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 90, -1));

        bidField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bidField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bidFieldMouseEntered(evt);
            }
        });
        bidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidFieldActionPerformed(evt);
            }
        });
        bidField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bidFieldKeyTyped(evt);
            }
        });
        bookingPanel.add(bidField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 90, 30));

        cancelBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelBtn.setText("Cancel Reservation");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelBtnMouseExited(evt);
            }
        });
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        bookingPanel.add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 210, -1));

        bookingClearbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        bookingClearbtn.setText("Clear");
        bookingClearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingClearbtnActionPerformed(evt);
            }
        });
        bookingPanel.add(bookingClearbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 350, -1, -1));

        fillterbox.setBackground(new java.awt.Color(204, 204, 204));
        fillterbox.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        fillterbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "TODAY", "PAST", "FUTURE" }));
        fillterbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fillterboxMouseClicked(evt);
            }
        });
        fillterbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillterboxActionPerformed(evt);
            }
        });
        bookingPanel.add(fillterbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, 130, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Reservation ID : ");
        bookingPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Payment Slip    :");
        bookingPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 210, -1));

        editbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        editbtn.setText("Edit Reservation");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });
        bookingPanel.add(editbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, -1, -1));

        slipBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        slipBtn.setText("Slip");
        slipBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slipBtnActionPerformed(evt);
            }
        });
        bookingPanel.add(slipBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 410, 80, -1));

        GetBookings.setBackground(new java.awt.Color(204, 204, 204));
        GetBookings.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        GetBookings.setText("GetBookings");
        GetBookings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetBookingsActionPerformed(evt);
            }
        });
        bookingPanel.add(GetBookings, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 280, -1, -1));

        getContentPane().add(bookingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 990, 590));

        editBookingPanel.setBackground(new java.awt.Color(18, 18, 16));
        editBookingPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Edit Booking ");
        editBookingPanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        jLabel27.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Bookig ID        :");
        editBookingPanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 178, -1));

        editBID.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editBID.setForeground(new java.awt.Color(102, 102, 102));
        editBID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBIDActionPerformed(evt);
            }
        });
        editBookingPanel.add(editBID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 263, -1));

        editUpdateBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        editUpdateBtn.setText("Update");
        editUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUpdateBtnActionPerformed(evt);
            }
        });
        editBookingPanel.add(editUpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 430, 100, -1));

        jLabel28.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Seats               :");
        editBookingPanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 178, -1));

        jLabel29.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Date                 :");
        editBookingPanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 160, -1));

        editDate.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editDate.setForeground(new java.awt.Color(102, 102, 102));
        editDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDateActionPerformed(evt);
            }
        });
        editBookingPanel.add(editDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 263, -1));

        jLabel30.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("StartTime        :");
        editBookingPanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 178, -1));

        editSeatNo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editSeatNo.setForeground(new java.awt.Color(102, 102, 102));
        editSeatNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSeatNoActionPerformed(evt);
            }
        });
        editBookingPanel.add(editSeatNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 263, -1));

        jLabel31.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("EndTime         :");
        editBookingPanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 167, -1));

        cancelEditBookingbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelEditBookingbtn.setText("Cancel");
        cancelEditBookingbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelEditBookingbtnMouseClicked(evt);
            }
        });
        cancelEditBookingbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelEditBookingbtnActionPerformed(evt);
            }
        });
        editBookingPanel.add(cancelEditBookingbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        editStime.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        editStime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00" }));
        editStime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editStimeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editStimeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editStimeMouseExited(evt);
            }
        });
        editStime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStimeActionPerformed(evt);
            }
        });
        editBookingPanel.add(editStime, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 263, 31));

        editEtime.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        editEtime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00" }));
        editEtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEtimeActionPerformed(evt);
            }
        });
        editBookingPanel.add(editEtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 370, 263, 31));

        jLabel32.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Payment          :");
        editBookingPanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 160, -1));

        editPay.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editPay.setForeground(new java.awt.Color(102, 102, 102));
        editPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPayActionPerformed(evt);
            }
        });
        editBookingPanel.add(editPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 263, -1));

        jLabel33.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("TableNo           :");
        editBookingPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 178, -1));

        editTableNo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editTableNo.setForeground(new java.awt.Color(102, 102, 102));
        editTableNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTableNoActionPerformed(evt);
            }
        });
        editBookingPanel.add(editTableNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 263, -1));

        getContentPane().add(editBookingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 490, 520));

        tablepanel.setBackground(new java.awt.Color(18, 18, 16));
        tablepanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableTable.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TableNo", "Seats"
            }
        ));
        tableTable.setRowHeight(25);
        tableTable.setShowHorizontalLines(true);
        tableTable.setShowVerticalLines(true);
        tableTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableTable);
        if (tableTable.getColumnModel().getColumnCount() > 0) {
            tableTable.getColumnModel().getColumn(0).setResizable(false);
            tableTable.getColumnModel().getColumn(1).setResizable(false);
        }

        tablepanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 400, 170));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Table Details");
        tablepanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        edittable.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        edittable.setText("Edit Table");
        edittable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edittableActionPerformed(evt);
            }
        });
        tablepanel.add(edittable, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 360, -1, -1));

        tableremovebtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tableremovebtn.setText("Remove");
        tableremovebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableremovebtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tableremovebtnMouseExited(evt);
            }
        });
        tableremovebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableremovebtnActionPerformed(evt);
            }
        });
        tablepanel.add(tableremovebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 360, -1, -1));

        searchNo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        searchNo.setForeground(new java.awt.Color(102, 102, 102));
        searchNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchNoMouseReleased(evt);
            }
        });
        searchNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchNoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchNoKeyTyped(evt);
            }
        });
        tablepanel.add(searchNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 160, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Search");
        tablepanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 30, 70, 30));

        ttt.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ttt.setForeground(new java.awt.Color(255, 255, 255));
        ttt.setText("Seats :");
        tablepanel.add(ttt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, -1, -1));

        seatview.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        seatview.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                seatviewKeyTyped(evt);
            }
        });
        tablepanel.add(seatview, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 50, 30));

        addtable.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        addtable.setText("Add Table");
        addtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtableActionPerformed(evt);
            }
        });
        tablepanel.add(addtable, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 360, -1, -1));

        ttt1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ttt1.setForeground(new java.awt.Color(255, 255, 255));
        ttt1.setText("Table No:");
        tablepanel.add(ttt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, -1, -1));

        tableNoview.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        tableNoview.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tableNoviewKeyTyped(evt);
            }
        });
        tablepanel.add(tableNoview, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 50, 30));

        clear2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clear2.setText("Clear");
        clear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear2ActionPerformed(evt);
            }
        });
        tablepanel.add(clear2, new org.netbeans.lib.awtextra.AbsoluteConstraints(566, 360, -1, -1));

        getContentPane().add(tablepanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, 900, 460));

        cuspanel.setBackground(new java.awt.Color(18, 18, 16));
        cuspanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        custable.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        custable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustomerID", "Name", "Email", "Contact", "UserName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        custable.setRowHeight(25);
        custable.setShowHorizontalLines(true);
        custable.setShowVerticalLines(true);
        custable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                custableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(custable);
        if (custable.getColumnModel().getColumnCount() > 0) {
            custable.getColumnModel().getColumn(0).setResizable(false);
            custable.getColumnModel().getColumn(1).setResizable(false);
            custable.getColumnModel().getColumn(2).setResizable(false);
            custable.getColumnModel().getColumn(3).setResizable(false);
            custable.getColumnModel().getColumn(4).setResizable(false);
        }

        cuspanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 860, 170));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Customer Details");
        cuspanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        cusBookingBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cusBookingBtn.setText("Add Booking");
        cusBookingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusBookingBtnActionPerformed(evt);
            }
        });
        cuspanel.add(cusBookingBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, -1, -1));

        cusRemoveBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cusRemoveBtn.setText("Remove");
        cusRemoveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cusRemoveBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cusRemoveBtnMouseExited(evt);
            }
        });
        cusRemoveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusRemoveBtnActionPerformed(evt);
            }
        });
        cuspanel.add(cusRemoveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        searchName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        searchName.setForeground(new java.awt.Color(102, 102, 102));
        searchName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchNameMouseReleased(evt);
            }
        });
        searchName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchNameKeyReleased(evt);
            }
        });
        cuspanel.add(searchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 160, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Search");
        cuspanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 30, 70, 30));

        cuss.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        cuss.setForeground(new java.awt.Color(255, 255, 255));
        cuss.setText("Cus ID : ");
        cuspanel.add(cuss, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        cusIdView.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        cusIdView.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cusIdViewKeyTyped(evt);
            }
        });
        cuspanel.add(cusIdView, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 50, 30));

        clear.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        cuspanel.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, -1, -1));

        cusBookingBtn1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cusBookingBtn1.setText("View Bookings");
        cusBookingBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusBookingBtn1ActionPerformed(evt);
            }
        });
        cuspanel.add(cusBookingBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 370, -1, -1));

        getContentPane().add(cuspanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, 900, 460));

        cusManage.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        cusManage.setText("Customer Management");
        cusManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusManageActionPerformed(evt);
            }
        });
        getContentPane().add(cusManage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 300, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/profile.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 80, 90));

        logOutBtn1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        logOutBtn1.setText("LogOut");
        logOutBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtn1ActionPerformed(evt);
            }
        });
        getContentPane().add(logOutBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Admin");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/adminview.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tablemanageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablemanageActionPerformed
        cuspanel.setVisible(false);
        tablepanel.setVisible(true);
        bookingPanel.setVisible(false);
        displayTableTable(TableController.displayTables());
        clearData();
    }//GEN-LAST:event_tablemanageActionPerformed
    public void rowData(){
        int r = custable.getSelectedRow();
        String id = custable.getValueAt(r, 0).toString();
        cusIdView.setText(id);
    }
    public void rowTableData(){
        int r = tableTable.getSelectedRow();
        String no = tableTable.getValueAt(r, 0).toString();
        String seats = tableTable.getValueAt(r, 1).toString();
        tableNoview.setText(no);
        seatview.setText(seats);
    }
    private void logOutBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtn1ActionPerformed
        dispose();
        AdminLogIn admin = new AdminLogIn();
        admin.setVisible(true);
    }//GEN-LAST:event_logOutBtn1ActionPerformed

    private void cusRemoveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusRemoveBtnActionPerformed
        String id = cusIdView.getText();

        if(id.equals(""))
        JOptionPane.showMessageDialog(null, "Please select Customer Id..!");
        else{
            if(CustomerController.deleteCustomer(Integer.parseInt(id))){
                JOptionPane.showMessageDialog(null, "Customer removed..!");
                displayCusTable(CustomerController.displayCus());
                clearData();
            }
        }
    }//GEN-LAST:event_cusRemoveBtnActionPerformed

    private void cusBookingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusBookingBtnActionPerformed
        String id = cusIdView.getText();

        if(id.equals(""))
            JOptionPane.showMessageDialog(null, "Please select Customer Id..!");
        else{
            new AddBooking(Integer.parseInt(id)).setVisible(true);
            
        }
    }//GEN-LAST:event_cusBookingBtnActionPerformed

    private void custableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_custableMouseClicked
        rowData();
    }//GEN-LAST:event_custableMouseClicked
    private void displayBookingTable(ArrayList<Booking> bookings){
        DefaultTableModel model = (DefaultTableModel) bookingtable.getModel();
        model.setRowCount(0);
        //TableController tCon = new TableController();
        for (Booking b : bookings) {
            Object[] row = {b.getBid(),b.getTable().getTableNumber(),b.getTable().getCapacity(),b.getStartTime().toLocalDate(),b.getStartTime().toLocalTime(),b.getEndTime().toLocalTime(),b.getCusId(),b.getPstatus()};
            model.addRow(row);
        } 
    }
    private void displayFutureBookings(ArrayList<Booking> bookings) {
        DefaultTableModel model = (DefaultTableModel) bookingtable.getModel();
        model.setRowCount(0);

        LocalDateTime today = LocalDateTime.now();
        for (Booking b : bookings) {
            LocalDateTime bookingDateTime = LocalDateTime.of(b.getEndTime().toLocalDate(),b.getStartTime().toLocalTime());
            if (bookingDateTime.isAfter(today)||bookingDateTime.isEqual(today)) {
                Object[] row = {b.getBid(), b.getTable().getTableNumber(), b.getTable().getCapacity(), b.getStartTime().toLocalDate(), b.getStartTime().toLocalTime(), b.getEndTime().toLocalTime(), b.getCusId(), b.getPstatus()};
                model.addRow(row);
            }
        }
    }
    private void displayPastBookings(ArrayList<Booking> bookings) {
        DefaultTableModel model = (DefaultTableModel) bookingtable.getModel();
        model.setRowCount(0);

        LocalDateTime today = LocalDateTime.now();
        for (Booking b : bookings) {
            LocalDateTime bookingDateTime = LocalDateTime.of(b.getEndTime().toLocalDate(),b.getStartTime().toLocalTime());
            if ((bookingDateTime.isBefore(today))){
                Object[] row = {b.getBid(), b.getTable().getTableNumber(), b.getTable().getCapacity(), b.getStartTime().toLocalDate(), b.getStartTime().toLocalTime(), b.getEndTime().toLocalTime(), b.getCusId(), b.getPstatus()};
                model.addRow(row);
            }
        }
    }
    private void displayTodayBookings(ArrayList<Booking> bookings) {
        DefaultTableModel model = (DefaultTableModel) bookingtable.getModel();
        model.setRowCount(0);

        LocalDate today = LocalDate.now();
        for (Booking b : bookings) {
            LocalDate bookingDateTime = b.getStartTime().toLocalDate();
            if ((bookingDateTime.isEqual(today))){
                Object[] row = {b.getBid(), b.getTable().getTableNumber(), b.getTable().getCapacity(), b.getStartTime().toLocalDate(), b.getStartTime().toLocalTime(), b.getEndTime().toLocalTime(), b.getCusId(), b.getPstatus()};
                model.addRow(row);
            }
        }
    }
    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clearData();
        //displayCusTable(cusCon.displayCus());
    }//GEN-LAST:event_clearActionPerformed

    private void searchNameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchNameMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_searchNameMouseReleased

    private void searchNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchNameKeyReleased
        String name = searchName.getText();
        displayCusTable(CustomerController.serachCustomer(name));
        
    }//GEN-LAST:event_searchNameKeyReleased

    private void tableTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTableMouseClicked
        rowTableData();
    }//GEN-LAST:event_tableTableMouseClicked
    
    private void edittableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edittableActionPerformed
        String no = tableNoview.getText();
        String seats = seatview.getText();

        if(no.equals("")||seats.equals(""))
            JOptionPane.showMessageDialog(null, "Please enter all fields..!");
        else{
            if(TableController.updateTableSeats(Integer.parseInt(no),Integer.parseInt(seats))){
                JOptionPane.showMessageDialog(null, "Table updated..!");
                displayTableTable(TableController.displayTables());
                clearData();
            }
        }
    }//GEN-LAST:event_edittableActionPerformed

    private void tableremovebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableremovebtnActionPerformed
        String no = tableNoview.getText();

        if(no.equals(""))
            JOptionPane.showMessageDialog(null, "Please select tableNo..!");
        else{
            if(TableController.deleteTable(Integer.parseInt(no))){
                JOptionPane.showMessageDialog(null, "Table removed..!");
                displayTableTable(TableController.displayTables());
                clearData();
            }
        }
    }//GEN-LAST:event_tableremovebtnActionPerformed

    private void searchNoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchNoMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_searchNoMouseReleased

    private void searchNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchNoKeyReleased
        String no = searchNo.getText();
        if(no.equals("")){
            displayTableTable(TableController.displayTables());
        }else
            displayTableTable(TableController.getTableBySeats(Integer.parseInt(no)));
    }//GEN-LAST:event_searchNoKeyReleased

    private void addtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtableActionPerformed
        String no = tableNoview.getText();
        String seats = seatview.getText();
        if(no.equals("")||seats.equals(""))
            JOptionPane.showMessageDialog(null, "Please enter all fields..!");
        else{
            if(TableController.getTable(Integer.parseInt(no))!=null)
                JOptionPane.showMessageDialog(null, "The table number you entered already exists..!");
            else{
                if(TableController.addTable(Integer.parseInt(no), Integer.parseInt(seats))){
                    JOptionPane.showMessageDialog(null, "Table is added..!");
                    displayTableTable(TableController.displayTables());
                    clearData();
                }else
                    JOptionPane.showMessageDialog(null, "Table is not added..!");
            }
        }
    }//GEN-LAST:event_addtableActionPerformed

    private void cusManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusManageActionPerformed
        cuspanel.setVisible(true);
        tablepanel.setVisible(false);
        bookingPanel.setVisible(false);
        displayCusTable(CustomerController.displayCus());
        clearData();
        
    }//GEN-LAST:event_cusManageActionPerformed

    private void bookmanageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookmanageActionPerformed
        cusId = 0;
        fillterbox.setSelectedItem("ALL");
        cuspanel.setVisible(false);
        tablepanel.setVisible(false);
        bookingPanel.setVisible(true);
        displayBookingTable(ReservationController.getAllBookings());
        clearData();
    }//GEN-LAST:event_bookmanageActionPerformed

    private void clear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear2ActionPerformed
        clearData();
    }//GEN-LAST:event_clear2ActionPerformed

    private void tableNoviewKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableNoviewKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_tableNoviewKeyTyped

    private void seatviewKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_seatviewKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_seatviewKeyTyped

    private void searchNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchNoKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_searchNoKeyTyped

    private void cusIdViewKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cusIdViewKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_cusIdViewKeyTyped

    private void bookingtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingtableMouseClicked
        bookingRowData();
    }//GEN-LAST:event_bookingtableMouseClicked
     public void bookingRowData(){
        int r = bookingtable.getSelectedRow();
        String id = bookingtable.getValueAt(r, 0).toString();
        bidField.setText(id);
       
        
    }
    private void bookingtableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingtableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingtableMouseEntered

    private void bidFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bidFieldMouseEntered
        
    }//GEN-LAST:event_bidFieldMouseEntered

    private void bidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidFieldActionPerformed
        
    }//GEN-LAST:event_bidFieldActionPerformed

    private void bidFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bidFieldKeyTyped
        char c = evt.getKeyChar();

        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_bidFieldKeyTyped

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        String rid = bidField.getText();
        Booking booking = ReservationController.getBookingById(Integer.parseInt(rid));
        LocalDate ndate = LocalDate.now();
        
        if(rid.equals(""))
            JOptionPane.showMessageDialog(null, "Please select the reservationID..");
        else{
            if(!ndate.isBefore(booking.getEndTime().toLocalDate())&&booking.getPstatus().equals("Pending")){
                JOptionPane.showMessageDialog(this, "You should have to pay for reseravtion.");
            }else{
                if(ReservationController.cancelReservation(Integer.parseInt(rid))){
                    if(cusId>0)
                        displayBookingTable(ReservationController.getAllCustomerBookings(cusId));
                    else
                        displayBookingTable(ReservationController.getAllBookings());
                    bidField.setText("");
                    JOptionPane.showMessageDialog(this, "Reservation removed..!");
                }
            }   
        }
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void bookingClearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingClearbtnActionPerformed
        cusId = 0;
        bidField.setText("");
        fillterbox.setSelectedItem("ALL");
        displayBookingTable(ReservationController.getAllBookings());
    }//GEN-LAST:event_bookingClearbtnActionPerformed

    private void cusBookingBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusBookingBtn1ActionPerformed
        String id = cusIdView.getText();

        if(id.equals(""))
            JOptionPane.showMessageDialog(null, "Please select Customer Id..!");
        else{
            cusId = Integer.parseInt(id);
            displayBookingTable(ReservationController.getAllCustomerBookings(cusId));
            cuspanel.setVisible(false);
            bookingPanel.setVisible(true);
        }
    }//GEN-LAST:event_cusBookingBtn1ActionPerformed

    private void fillterboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillterboxActionPerformed
        String res = fillterbox.getSelectedItem().toString();
        if(cusId>0){
            switch (res) {
                case "ALL" -> displayBookingTable(ReservationController.getAllCustomerBookings(cusId));
                case "TODAY" -> displayTodayBookings(ReservationController.getAllCustomerBookings(cusId));
                case "PAST" -> displayPastBookings(ReservationController.getAllCustomerBookings(cusId));
                case "FUTURE" -> displayFutureBookings(ReservationController.getAllCustomerBookings(cusId));
            }
        }else{
            switch (res) {
                case "ALL" -> displayBookingTable(ReservationController.getAllBookings());
                case "TODAY" -> displayTodayBookings(ReservationController.getAllBookings());
                case "PAST" -> displayPastBookings(ReservationController.getAllBookings());
                case "FUTURE" -> displayFutureBookings(ReservationController.getAllBookings());
            }
        }
        
    }//GEN-LAST:event_fillterboxActionPerformed

    private void fillterboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fillterboxMouseClicked
        
        
    }//GEN-LAST:event_fillterboxMouseClicked

    private void pstatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pstatActionPerformed
        String rid = payBID.getText();
        if(rid.isBlank()){
             JOptionPane.showMessageDialog(null, "Please select the reservationID..");
        }else{
          
            String res = pstat.getSelectedItem().toString();
            if(ReservationController.updatePaymentStatus(Integer.parseInt(rid), res))
                    JOptionPane.showMessageDialog(null, "Payment Status Updated..!");
                else
                    JOptionPane.showMessageDialog(null, "Payment Status not Updated..!");
            if(cusId>0)
                displayBookingTable(ReservationController.getAllCustomerBookings(cusId));
            else
                displayBookingTable(ReservationController.getAllBookings());
  
        }
    }//GEN-LAST:event_pstatActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        String rid = bidField.getText();
        Booking booking = ReservationController.getBookingById(Integer.parseInt(rid));
        LocalDate ndate = LocalDate.now();
        if(rid.equals(""))
        JOptionPane.showMessageDialog(null, "Select reservation first.");
        else{
            if(ndate.isBefore(booking.getStartTime().toLocalDate())){
                bookingPanel.setVisible(false);
                getBookingDataToUpdate(Integer.parseInt(rid));
            }else{
                JOptionPane.showMessageDialog(null, "You can't change reservation now.");
            }
        }
    }//GEN-LAST:event_editbtnActionPerformed

    private void editBIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editBIDActionPerformed

    private void editUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUpdateBtnActionPerformed
        String id = editBID.getText();
        String cid = editPay.getText();
        String tno = editTableNo.getText();
        String date = editDate.getText();
        String stime = editStime.getSelectedItem().toString();
        String etime = editEtime.getSelectedItem().toString();
        LocalDate bdate = LocalDate.parse(date) ;
        LocalDate ndate = LocalDate.now();
        
        if(!bdate.isBefore(ndate)){
            LocalDateTime newStartDateTime = LocalDateTime.of(bdate,LocalTime.parse(stime));
            LocalDateTime newEndDateTime = LocalDateTime.of(bdate,LocalTime.parse(etime));

            if(ReservationController.updateReservation(Integer.parseInt(id), Integer.parseInt(tno), newStartDateTime, newEndDateTime)){
                JOptionPane.showMessageDialog(null, "Booking updated..!");
                if(cusId>0)
                    displayBookingTable(ReservationController.getAllCustomerBookings(cusId));
                else
                    displayBookingTable(ReservationController.getAllBookings());
                editBookingPanel.setVisible(false);
                bookingPanel.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Booking not updated..!");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Booking date has passed..!");
        }
        

    }//GEN-LAST:event_editUpdateBtnActionPerformed

    private void editDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editDateActionPerformed

    private void editSeatNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSeatNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editSeatNoActionPerformed

    private void cancelEditBookingbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelEditBookingbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelEditBookingbtnMouseClicked

    private void cancelEditBookingbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelEditBookingbtnActionPerformed
        //displayBookingTable(rv.getAllCustomerBookings(cus.getcId()));
        editBookingPanel.setVisible(false);
        bookingPanel.setVisible(true);
    }//GEN-LAST:event_cancelEditBookingbtnActionPerformed

    private void editStimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editStimeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_editStimeMouseClicked

    private void editStimeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editStimeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_editStimeMouseEntered

    private void editStimeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editStimeMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_editStimeMouseExited

    private void editStimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editStimeActionPerformed
        String time = editStime.getSelectedItem().toString();
        int s = Integer.parseInt(time.substring(0, 2)); //08:00
        int size = 20-s;
        String etimeList[]= new String[size];
        for (int i = 0; i < size; i++) {
            etimeList[i] = String.format("%02d:00", i+s+1);

        }

        editEtime.setModel(new DefaultComboBoxModel<>(etimeList));
    }//GEN-LAST:event_editStimeActionPerformed

    private void editEtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editEtimeActionPerformed

    private void editPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editPayActionPerformed

    private void editTableNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTableNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editTableNoActionPerformed

    private void slipBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slipBtnActionPerformed
        String rid = bidField.getText();

        if(rid.isBlank())
            JOptionPane.showMessageDialog(null, "Select reservation first.");
        else{
            bookingPanel.setVisible(false);
            getSlip(Integer.parseInt(rid));
        }
    }//GEN-LAST:event_slipBtnActionPerformed

    private void downSlipBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downSlipBtnActionPerformed
        String text = pstat.getSelectedItem().toString();

        if(text.equals("Paid")){
            int id = Integer.parseInt(payBID.getText());
            Booking booking = ReservationController.getBookingById(id);
            int cid = Integer.parseInt(booking.getCusId());
            int seats = booking.getTable().getCapacity();
            String date = booking.getStartTime().toLocalDate().toString();
            String stime = booking.getStartTime().toLocalTime().toString();
            String etime = booking.getEndTime().toLocalTime().toString();

            PaymentAndReport.generateSlip(id, cid, seats, date, stime, etime);

        }else{
            JOptionPane.showMessageDialog(null, "Customer has to pay first to get slip.");
        }

    }//GEN-LAST:event_downSlipBtnActionPerformed

    private void cancelPayBookingbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPayBookingbtnActionPerformed
        genSlipPanel.setVisible(false);
        bookingPanel.setVisible(true);
    }//GEN-LAST:event_cancelPayBookingbtnActionPerformed

    private void GetBookingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetBookingsActionPerformed
        String res = fillterbox.getSelectedItem().toString();
        PaymentAndReport.getBookingDetailReport(bookingtable,res);
    }//GEN-LAST:event_GetBookingsActionPerformed

    private void cancelBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseEntered
        cancelBtn.setBackground(Color.red);
    }//GEN-LAST:event_cancelBtnMouseEntered

    private void cancelBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseExited
        cancelBtn.setBackground(Color.white);
    }//GEN-LAST:event_cancelBtnMouseExited

    private void tableremovebtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableremovebtnMouseEntered
        tableremovebtn.setBackground(Color.red);
    }//GEN-LAST:event_tableremovebtnMouseEntered

    private void tableremovebtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableremovebtnMouseExited
        tableremovebtn.setBackground(Color.white);
    }//GEN-LAST:event_tableremovebtnMouseExited

    private void cusRemoveBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusRemoveBtnMouseEntered
        cusRemoveBtn.setBackground(Color.red);
    }//GEN-LAST:event_cusRemoveBtnMouseEntered

    private void cusRemoveBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusRemoveBtnMouseExited
        cusRemoveBtn.setBackground(Color.white);
    }//GEN-LAST:event_cusRemoveBtnMouseExited
    
    private void displayCusTable(ArrayList<Customer>cuss){
        DefaultTableModel model = (DefaultTableModel) custable.getModel();
        model.setRowCount(0);

        for (Customer cus : cuss) {
            Object[] row = {cus.getcId(), cus.getName(), cus.getEmail(),cus.getContact(),cus.getUsername()};
            model.addRow(row);
        } 
    }
    
    private void clearData(){
        cusIdView.setText("");
        tableNoview.setText("");
        seatview.setText("");
        searchName.setText("");
        searchNo.setText("");
    }
    
    private void displayTableTable(ArrayList<Table>tables){
       DefaultTableModel model = (DefaultTableModel) tableTable.getModel();
        model.setRowCount(0);

        for (Table t : tables) {
            Object[] row = {t.getTableNumber(),t.getCapacity()};
            model.addRow(row);
        } 
   }
    private void getBookingDataToUpdate(int bid){
    Booking booking = ReservationController.getBookingById(bid);
    editBID.setEditable(false);
    editBookingPanel.setVisible(true);
    editTableNo.setEditable(false);
    editSeatNo.setEditable(false);
    editDate.setEditable(false);
    editPay.setEditable(false);
    
    editBID.setText(bid+"");
    editTableNo.setText(booking.getTable().getTableNumber()+"");
    editSeatNo.setText(booking.getTable().getCapacity()+"");
    editDate.setText(booking.getStartTime().toLocalDate().toString());
    editPay.setText(booking.getPstatus());
    
    editStime.setSelectedItem(booking.getStartTime().toLocalTime().toString());
    editEtime.setSelectedItem(booking.getEndTime().toLocalTime().toString());
    
}
    private void getSlip(int bid){
        Booking booking = ReservationController.getBookingById(bid);
        genSlipPanel.setVisible(true);
        payBID.setEditable(false);
        payTableNo.setEditable(false);
        paySeatNo.setEditable(false);
        payDate.setEditable(false);
        paytime.setEditable(false);
        payment.setEditable(false);


        payBID.setText(bid+"");
        payTableNo.setText(booking.getTable().getTableNumber()+"");
        payDate.setText(booking.getStartTime().toLocalDate().toString());
        pstat.setSelectedItem(booking.getPstatus());
        int seats = booking.getTable().getCapacity();
        String status = booking.getPstatus();
        String stime = booking.getStartTime().toLocalTime().toString();
        String etime = booking.getEndTime().toLocalTime().toString();
        int hours = (int)PaymentAndReport.getHours(stime, etime);
        paySeatNo.setText(seats+"");
        paytime.setText(stime+"-"+etime);
        payHours.setText(hours+"");

        String pay = String.format("Rs %.2f", PaymentAndReport.getSubtotal(seats, hours));
        payment.setText(pay);
    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GetBookings;
    private javax.swing.JButton addtable;
    private javax.swing.JTextField bidField;
    private javax.swing.JButton bookingClearbtn;
    private javax.swing.JPanel bookingPanel;
    private javax.swing.JTable bookingtable;
    private javax.swing.JButton bookmanage;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton cancelEditBookingbtn;
    private javax.swing.JButton cancelPayBookingbtn;
    private javax.swing.JButton clear;
    private javax.swing.JButton clear2;
    private javax.swing.JButton cusBookingBtn;
    private javax.swing.JButton cusBookingBtn1;
    private javax.swing.JTextField cusIdView;
    private javax.swing.JButton cusManage;
    private javax.swing.JButton cusRemoveBtn;
    private javax.swing.JPanel cuspanel;
    private javax.swing.JLabel cuss;
    private javax.swing.JTable custable;
    private javax.swing.JButton downSlipBtn;
    private javax.swing.JTextField editBID;
    private javax.swing.JPanel editBookingPanel;
    private javax.swing.JTextField editDate;
    private javax.swing.JComboBox<String> editEtime;
    private javax.swing.JTextField editPay;
    private javax.swing.JTextField editSeatNo;
    private javax.swing.JComboBox<String> editStime;
    private javax.swing.JTextField editTableNo;
    private javax.swing.JButton editUpdateBtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JButton edittable;
    private javax.swing.JComboBox<String> fillterbox;
    private javax.swing.JPanel genSlipPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logOutBtn1;
    private javax.swing.JTextField payBID;
    private javax.swing.JTextField payDate;
    private javax.swing.JTextField payHours;
    private javax.swing.JTextField paySeatNo;
    private javax.swing.JTextField payTableNo;
    private javax.swing.JTextField payment;
    private javax.swing.JTextField paytime;
    private javax.swing.JComboBox<String> pstat;
    private javax.swing.JTextField searchName;
    private javax.swing.JTextField searchNo;
    private javax.swing.JTextField seatview;
    private javax.swing.JButton slipBtn;
    private javax.swing.JTextField tableNoview;
    private javax.swing.JTable tableTable;
    private javax.swing.JButton tablemanage;
    private javax.swing.JPanel tablepanel;
    private javax.swing.JButton tableremovebtn;
    private javax.swing.JLabel ttt;
    private javax.swing.JLabel ttt1;
    // End of variables declaration//GEN-END:variables
}
