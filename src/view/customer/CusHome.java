/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.customer;

import controller.CustomerController;
import controller.PaymentAndReport;
import controller.ReservationController;
import controller.TableController;
import java.awt.Color;
import java.awt.Font;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Booking;
import model.Customer;
import model.Table;
import view.Home;

/**
 *
 * @author Sachii
 */
public class CusHome extends javax.swing.JFrame {
    
    private Home h = new Home();
    private Customer cus ;
    
    public CusHome() {
        initComponents();
        profile.setVisible(false);
        
        if(cus==null){
            h.setVisible(true);
            dispose();
        }else{
            cusname.setText("Hi "+",");
        }
        
        profile.setVisible(false);
        booking.setVisible(false);
        bookingPanel.setVisible(true);
        editBookingPanel.setVisible(false);
        genSlipPanel.setVisible(false);
        
        bookingInitial();
        
        //bookingPanel.setBackground(new Color(0,0,0,120));
        bookingtable.getTableHeader().setFont(new Font("Times New Romans", Font.BOLD, 20));
        bookingtable.getTableHeader().setOpaque(false);
        bookingtable.getTableHeader().setBackground(new Color(32, 136, 203));
        bookingtable.getTableHeader().setForeground(new Color(0,0,0));
        bookingtable.setRowHeight(25);
        
        
        displayBookingTable(ReservationController.getAllCustomerBookings(1));
    }
    
    public CusHome(Customer cus) {
        initComponents();
        this.cus=cus;
        if(cus==null){
            dispose();
            h.setVisible(true);
        }else{
            cusname.setText("Hi "+cus.getName()+",");
            bookingInitial();
            profile.setVisible(false);
            booking.setVisible(false);
            bookingPanel.setVisible(true);
            editBookingPanel.setVisible(false);
            genSlipPanel.setVisible(false);

            //bookingPanel.setBackground(new Color(0,0,0,120));
           bookingtable.getTableHeader().setFont(new Font("Times New Romans", Font.BOLD, 20));
            bookingtable.getTableHeader().setOpaque(false);
            bookingtable.getTableHeader().setBackground(new Color(32, 136, 203));
            bookingtable.getTableHeader().setForeground(new Color(0,0,0));
            bookingtable.setRowHeight(25);

            displayBookingTable(ReservationController.getAllCustomerBookings(cus.getcId()));
        }
    }
    
    public void viewCusDetails(){
        cusname.setText("Hi "+cus.getName()+",");
        name.setText(cus.getName());
        mail.setText(cus.getEmail());
        contact.setText(cus.getContact());
        uname.setText(cus.getUsername());
        pass.setText(cus.getPassword());
        pass.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cusname = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bookingsbtn = new javax.swing.JButton();
        newBookBtn = new javax.swing.JButton();
        profileBtn = new javax.swing.JButton();
        logOutBtn = new javax.swing.JButton();
        bookingPanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookingtable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        bidField = new javax.swing.JTextField();
        cancelBtn = new javax.swing.JButton();
        editbtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        genSlipbtn = new javax.swing.JButton();
        genSlipPanel = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        payBID = new javax.swing.JTextField();
        downSlipBtn = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        payDate = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        paySeatNo = new javax.swing.JTextField();
        cancelPayBookingbtn = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        payHours = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        payTableNo = new javax.swing.JTextField();
        paytime = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        payment = new javax.swing.JTextField();
        paystatus = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        booking = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        bookingSavebtn = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        bookingCancelbtn = new javax.swing.JButton();
        seats = new javax.swing.JComboBox<>();
        stime = new javax.swing.JComboBox<>();
        etime = new javax.swing.JComboBox<>();
        continuosBtn = new javax.swing.JRadioButton();
        specialbtn = new javax.swing.JRadioButton();
        singleBtn = new javax.swing.JRadioButton();
        etimeerror = new javax.swing.JLabel();
        special = new javax.swing.JPanel();
        sDate = new com.toedter.calendar.JDateChooser();
        jLabel26 = new javax.swing.JLabel();
        errormsg2 = new javax.swing.JLabel();
        eDate = new com.toedter.calendar.JDateChooser();
        edatelb = new javax.swing.JLabel();
        sunday = new javax.swing.JCheckBox();
        monday = new javax.swing.JCheckBox();
        tuesday = new javax.swing.JCheckBox();
        wednesday = new javax.swing.JCheckBox();
        saturday = new javax.swing.JCheckBox();
        thusday = new javax.swing.JCheckBox();
        friday = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        tableCount = new javax.swing.JComboBox<>();
        seaterror = new javax.swing.JLabel();
        stimeerror = new javax.swing.JLabel();
        tableError = new javax.swing.JLabel();
        editBookingPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        editBID = new javax.swing.JTextField();
        editUpdateBtn = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        editDate = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        editSeatNo = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        cancelEditBookingbtn = new javax.swing.JButton();
        editStime = new javax.swing.JComboBox<>();
        editEtime = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        editPay = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        editTableNo = new javax.swing.JTextField();
        profile = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        mail = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        uname = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        npass = new javax.swing.JPasswordField();
        backToHome = new javax.swing.JButton();
        errPass = new javax.swing.JLabel();
        errName = new javax.swing.JLabel();
        errEmail = new javax.swing.JLabel();
        errCon = new javax.swing.JLabel();
        errUname = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cusname.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cusname.setForeground(new java.awt.Color(255, 255, 255));
        cusname.setText("Hi");
        getContentPane().add(cusname, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(" Enjoy your dining experience!");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 110, 240, -1));

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Welcome Back,");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 460, 60));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/profile.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 0, 70, 80));

        bookingsbtn.setBackground(new java.awt.Color(255, 153, 0));
        bookingsbtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        bookingsbtn.setText("Bookings");
        bookingsbtn.setAlignmentY(0.0F);
        bookingsbtn.setPreferredSize(new java.awt.Dimension(75, 55));
        bookingsbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingsbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bookingsbtnMouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bookingsbtnMouseReleased(evt);
            }
        });
        bookingsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingsbtnActionPerformed(evt);
            }
        });
        getContentPane().add(bookingsbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 130, 30));

        newBookBtn.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        newBookBtn.setText("New Booking");
        newBookBtn.setAlignmentY(0.0F);
        newBookBtn.setPreferredSize(new java.awt.Dimension(75, 55));
        newBookBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newBookBtnMouseClicked(evt);
            }
        });
        newBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBookBtnActionPerformed(evt);
            }
        });
        getContentPane().add(newBookBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 180, 30));

        profileBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        profileBtn.setText("Profile");
        profileBtn.setToolTipText("");
        profileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileBtnMouseClicked(evt);
            }
        });
        profileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileBtnActionPerformed(evt);
            }
        });
        getContentPane().add(profileBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 90, -1, -1));

        logOutBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        logOutBtn.setText("LogOut");
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });
        getContentPane().add(logOutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 10, -1, -1));

        bookingPanel.setBackground(new java.awt.Color(18, 18, 16));
        bookingPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Booking Details");
        bookingPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, 320, -1));

        bookingtable.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        bookingtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Reservation ID", "Table No", "Seats", "Date", "Start Time", "End Time", "Payment Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookingtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingtableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bookingtableMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(bookingtable);
        if (bookingtable.getColumnModel().getColumnCount() > 0) {
            bookingtable.getColumnModel().getColumn(0).setResizable(false);
            bookingtable.getColumnModel().getColumn(1).setResizable(false);
            bookingtable.getColumnModel().getColumn(2).setResizable(false);
            bookingtable.getColumnModel().getColumn(3).setResizable(false);
            bookingtable.getColumnModel().getColumn(4).setResizable(false);
            bookingtable.getColumnModel().getColumn(5).setResizable(false);
            bookingtable.getColumnModel().getColumn(6).setResizable(false);
        }

        bookingPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 1280, 180));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reservation ID : ");
        bookingPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        bidField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bidField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bidFieldMouseEntered(evt);
            }
        });
        bidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidFieldActionPerformed(evt);
            }
        });
        bidField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bidFieldKeyTyped(evt);
            }
        });
        bookingPanel.add(bidField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 90, 30));

        cancelBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelBtn.setText("Cancel Reservation");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelBtnMouseExited(evt);
            }
        });
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        bookingPanel.add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 210, -1));

        editbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        editbtn.setText("Edit Reservation");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });
        bookingPanel.add(editbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, -1, -1));

        clearBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        bookingPanel.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, -1, -1));

        genSlipbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        genSlipbtn.setText("Download Slip");
        genSlipbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genSlipbtnActionPerformed(evt);
            }
        });
        bookingPanel.add(genSlipbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 420, -1, -1));

        getContentPane().add(bookingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 1300, 530));

        genSlipPanel.setBackground(new java.awt.Color(51, 51, 51));
        genSlipPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Payment Slip");
        genSlipPanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, -1, -1));

        jLabel35.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Bookig ID          :");
        genSlipPanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 178, -1));

        payBID.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payBID.setForeground(new java.awt.Color(102, 102, 102));
        payBID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBIDActionPerformed(evt);
            }
        });
        genSlipPanel.add(payBID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 263, -1));

        downSlipBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        downSlipBtn.setText("Download");
        downSlipBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downSlipBtnActionPerformed(evt);
            }
        });
        genSlipPanel.add(downSlipBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 140, -1));

        jLabel36.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Seats                  :");
        genSlipPanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 178, -1));

        jLabel37.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Date                    :");
        genSlipPanel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 170, -1));

        payDate.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payDate.setForeground(new java.awt.Color(102, 102, 102));
        payDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payDateActionPerformed(evt);
            }
        });
        genSlipPanel.add(payDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 263, -1));

        jLabel38.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Payment  Status :");
        genSlipPanel.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 178, -1));

        paySeatNo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        paySeatNo.setForeground(new java.awt.Color(102, 102, 102));
        paySeatNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paySeatNoActionPerformed(evt);
            }
        });
        genSlipPanel.add(paySeatNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 263, -1));

        cancelPayBookingbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelPayBookingbtn.setText("Cancel");
        cancelPayBookingbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelPayBookingbtnMouseClicked(evt);
            }
        });
        cancelPayBookingbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPayBookingbtnActionPerformed(evt);
            }
        });
        genSlipPanel.add(cancelPayBookingbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, -1, -1));

        jLabel40.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Time                    :");
        genSlipPanel.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 180, -1));

        payHours.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payHours.setForeground(new java.awt.Color(102, 102, 102));
        payHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payHoursActionPerformed(evt);
            }
        });
        genSlipPanel.add(payHours, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 263, -1));

        jLabel41.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("TableNo             :");
        genSlipPanel.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 178, -1));

        payTableNo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payTableNo.setForeground(new java.awt.Color(102, 102, 102));
        payTableNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payTableNoActionPerformed(evt);
            }
        });
        genSlipPanel.add(payTableNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 263, -1));

        paytime.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        paytime.setForeground(new java.awt.Color(102, 102, 102));
        paytime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paytimeActionPerformed(evt);
            }
        });
        genSlipPanel.add(paytime, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 263, -1));

        jLabel39.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Hours                  :");
        genSlipPanel.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 178, -1));

        payment.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        payment.setForeground(new java.awt.Color(102, 102, 102));
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });
        genSlipPanel.add(payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 400, 263, -1));

        paystatus.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        paystatus.setForeground(new java.awt.Color(102, 102, 102));
        paystatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paystatusActionPerformed(evt);
            }
        });
        genSlipPanel.add(paystatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 263, -1));

        jLabel42.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Payment              :");
        genSlipPanel.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 178, -1));

        getContentPane().add(genSlipPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 490, 520));

        booking.setBackground(new java.awt.Color(51, 51, 51));
        booking.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("New Booking");
        booking.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, -1, -1));

        jLabel17.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Seat              :");
        booking.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 178, -1));

        bookingSavebtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        bookingSavebtn.setText("Save");
        bookingSavebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingSavebtnActionPerformed(evt);
            }
        });
        booking.add(bookingSavebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, -1, -1));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Start Time    :");
        booking.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 178, -1));

        jLabel19.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("End Time     :");
        booking.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 160, -1));

        bookingCancelbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        bookingCancelbtn.setText("Cancel");
        bookingCancelbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingCancelbtnMouseClicked(evt);
            }
        });
        bookingCancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingCancelbtnActionPerformed(evt);
            }
        });
        booking.add(bookingCancelbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, -1, -1));

        seats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        seats.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                seatsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                seatsMouseExited(evt);
            }
        });
        seats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatsActionPerformed(evt);
            }
        });
        booking.add(seats, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 263, 31));

        stime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stimeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stimeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stimeMouseExited(evt);
            }
        });
        stime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stimeActionPerformed(evt);
            }
        });
        booking.add(stime, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 263, 31));

        etime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                etimeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                etimeMouseExited(evt);
            }
        });
        etime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                etimeActionPerformed(evt);
            }
        });
        booking.add(etime, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 263, 31));

        continuosBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        continuosBtn.setText("Continuos");
        continuosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuosBtnActionPerformed(evt);
            }
        });
        booking.add(continuosBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 120, -1));

        specialbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        specialbtn.setText("Special");
        specialbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialbtnActionPerformed(evt);
            }
        });
        booking.add(specialbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 98, -1));

        singleBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        singleBtn.setText("Single Date");
        singleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleBtnActionPerformed(evt);
            }
        });
        booking.add(singleBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 140, -1));

        etimeerror.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        etimeerror.setForeground(new java.awt.Color(207, 0, 51));
        booking.add(etimeerror, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 260, 20));

        special.setBackground(new java.awt.Color(102, 102, 102));
        special.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sDateMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sDateMouseReleased(evt);
            }
        });
        sDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sDateKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sDateKeyTyped(evt);
            }
        });
        special.add(sDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 6, 216, 32));

        jLabel26.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Start Date    :");
        special.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 14, 160, -1));

        errormsg2.setForeground(new java.awt.Color(207, 0, 51));
        special.add(errormsg2, new org.netbeans.lib.awtextra.AbsoluteConstraints(507, 182, 200, 25));

        eDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                eDateKeyTyped(evt);
            }
        });
        special.add(eDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 45, 216, 32));

        edatelb.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        edatelb.setForeground(new java.awt.Color(255, 255, 255));
        edatelb.setText("End Date     :");
        special.add(edatelb, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 53, 160, -1));

        sunday.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        sunday.setText("Sunday");
        sunday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sundayActionPerformed(evt);
            }
        });
        special.add(sunday, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 85, -1));

        monday.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        monday.setText("Monday");
        monday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mondayActionPerformed(evt);
            }
        });
        special.add(monday, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 85, -1));

        tuesday.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tuesday.setText("Tuesday");
        tuesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tuesdayActionPerformed(evt);
            }
        });
        special.add(tuesday, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 85, -1));

        wednesday.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        wednesday.setText("Wednesday");
        wednesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wednesdayActionPerformed(evt);
            }
        });
        special.add(wednesday, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, -1, -1));

        saturday.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        saturday.setText("Saturday");
        saturday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saturdayActionPerformed(evt);
            }
        });
        special.add(saturday, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 85, -1));

        thusday.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        thusday.setText("Thusday");
        thusday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thusdayActionPerformed(evt);
            }
        });
        special.add(thusday, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 85, -1));

        friday.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        friday.setText("Friday");
        friday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fridayActionPerformed(evt);
            }
        });
        special.add(friday, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 85, -1));

        booking.add(special, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 520, 170));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Table    :");
        booking.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 160, -1));

        tableCount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableCountMouseEntered(evt);
            }
        });
        tableCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableCountActionPerformed(evt);
            }
        });
        booking.add(tableCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 430, 216, 30));

        seaterror.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        seaterror.setForeground(new java.awt.Color(207, 0, 51));
        booking.add(seaterror, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 260, 20));

        stimeerror.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        stimeerror.setForeground(new java.awt.Color(207, 0, 51));
        booking.add(stimeerror, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 270, 20));

        tableError.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tableError.setForeground(new java.awt.Color(207, 0, 51));
        booking.add(tableError, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 460, 260, 20));

        getContentPane().add(booking, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 540, 570));

        editBookingPanel.setBackground(new java.awt.Color(51, 51, 51));
        editBookingPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Edit Booking ");
        editBookingPanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        jLabel27.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Bookig ID        :");
        editBookingPanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 178, -1));

        editBID.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editBID.setForeground(new java.awt.Color(102, 102, 102));
        editBID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBIDActionPerformed(evt);
            }
        });
        editBookingPanel.add(editBID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 263, -1));

        editUpdateBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        editUpdateBtn.setText("Update");
        editUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUpdateBtnActionPerformed(evt);
            }
        });
        editBookingPanel.add(editUpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 430, 100, -1));

        jLabel28.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Seats               :");
        editBookingPanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 178, -1));

        jLabel29.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Date                 :");
        editBookingPanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 160, -1));

        editDate.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editDate.setForeground(new java.awt.Color(102, 102, 102));
        editDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDateActionPerformed(evt);
            }
        });
        editBookingPanel.add(editDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 263, -1));

        jLabel30.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("StartTime        :");
        editBookingPanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 178, -1));

        editSeatNo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editSeatNo.setForeground(new java.awt.Color(102, 102, 102));
        editSeatNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSeatNoActionPerformed(evt);
            }
        });
        editBookingPanel.add(editSeatNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 263, -1));

        jLabel31.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("EndTime         :");
        editBookingPanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 167, -1));

        cancelEditBookingbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancelEditBookingbtn.setText("Cancel");
        cancelEditBookingbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelEditBookingbtnMouseClicked(evt);
            }
        });
        cancelEditBookingbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelEditBookingbtnActionPerformed(evt);
            }
        });
        editBookingPanel.add(cancelEditBookingbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        editStime.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        editStime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00" }));
        editStime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editStimeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editStimeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editStimeMouseExited(evt);
            }
        });
        editStime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStimeActionPerformed(evt);
            }
        });
        editBookingPanel.add(editStime, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 263, 31));

        editEtime.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        editEtime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00" }));
        editEtime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editEtimeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editEtimeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editEtimeMouseExited(evt);
            }
        });
        editEtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEtimeActionPerformed(evt);
            }
        });
        editBookingPanel.add(editEtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 370, 263, 31));

        jLabel32.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Payment          :");
        editBookingPanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 160, -1));

        editPay.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editPay.setForeground(new java.awt.Color(102, 102, 102));
        editPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPayActionPerformed(evt);
            }
        });
        editBookingPanel.add(editPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, 263, -1));

        jLabel33.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("TableNo           :");
        editBookingPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 178, -1));

        editTableNo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        editTableNo.setForeground(new java.awt.Color(102, 102, 102));
        editTableNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTableNoActionPerformed(evt);
            }
        });
        editBookingPanel.add(editTableNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 263, -1));

        getContentPane().add(editBookingPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 490, 520));

        profile.setBackground(new java.awt.Color(51, 51, 51));
        profile.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Customer Profile");
        profile.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 6, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name                :");
        profile.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 89, 178, -1));

        name.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
        });
        profile.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 86, 263, -1));

        save.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        profile.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 430, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Email                :");
        profile.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 145, 178, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contact            :");
        profile.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 201, 160, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("UserName        :");
        profile.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 257, 178, -1));

        pass.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        profile.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 307, 263, -1));

        mail.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailActionPerformed(evt);
            }
        });
        mail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mailKeyReleased(evt);
            }
        });
        profile.add(mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 142, 263, -1));

        contact.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });
        contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contactKeyReleased(evt);
            }
        });
        profile.add(contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 198, 263, -1));

        uname.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });
        uname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                unameKeyReleased(evt);
            }
        });
        profile.add(uname, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 254, 263, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Password         :");
        profile.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 310, 167, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("New Password :");
        profile.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 363, 167, -1));

        npass.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        npass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                npassActionPerformed(evt);
            }
        });
        npass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                npassKeyReleased(evt);
            }
        });
        profile.add(npass, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 360, 263, -1));

        backToHome.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        backToHome.setText("Cancel");
        backToHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backToHomeMouseClicked(evt);
            }
        });
        backToHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToHomeActionPerformed(evt);
            }
        });
        profile.add(backToHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        errPass.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errPass.setForeground(new java.awt.Color(204, 0, 0));
        errPass.setText("dssd");
        profile.add(errPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, 370, 20));

        errName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errName.setForeground(new java.awt.Color(204, 0, 0));
        errName.setText("dfdf");
        profile.add(errName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 260, 30));

        errEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errEmail.setForeground(new java.awt.Color(204, 0, 0));
        errEmail.setText("fgg");
        profile.add(errEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 260, 20));

        errCon.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errCon.setForeground(new java.awt.Color(204, 0, 0));
        errCon.setText("dssd");
        profile.add(errCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 260, 20));

        errUname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        errUname.setForeground(new java.awt.Color(204, 0, 0));
        errUname.setText("dssd");
        profile.add(errUname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 260, 30));

        getContentPane().add(profile, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, 490, 520));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cusview.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
        dispose();
        h.setVisible(true);
        bookingAllclear();
        
    }//GEN-LAST:event_logOutBtnActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        int cid = cus.getcId();
        
        String name = this.name.getText();
        String mail = this.mail.getText();
        String cont = this.contact.getText();
        String uname = this.uname.getText();
        char[] passwordChars = pass.getPassword();
        String opass = new String(passwordChars);
        char[] npasswordChars = npass.getPassword();
        String npass = new String(npasswordChars);
        
        if(!(errName.getText().isBlank()&&errEmail.getText().isBlank()&&errCon.getText().isBlank()&&errPass.getText().isBlank()&&errUname.getText().isBlank()))
            JOptionPane.showMessageDialog(null, "Fields have errors.");
        else{
            if(name.isBlank()||mail.isBlank()||cont.isBlank()||uname.isBlank()||opass.isBlank())
                JOptionPane.showMessageDialog(null, "All fields are required.");
            else{
                if(npass.isBlank())
                    cus = new Customer(cid, name, mail, cont, uname, opass);
                else
                    cus = new Customer(cid, name, mail, cont, uname, npass);
            }
        }
        
        if(CustomerController.updateCustomerDetails(cus)){
            this.npass.setText("");
            cus = CustomerController.customerDetails(cid);
            viewCusDetails();
        }else{
            JOptionPane.showMessageDialog(null, "Profile cannot be upadateed..!");
        }
        
        
    }//GEN-LAST:event_saveActionPerformed

    private void mailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mailActionPerformed

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void backToHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToHomeActionPerformed
        newBookBtn.setBackground(new Color(255,255,255));
        profileBtn.setBackground(new Color(255,255,255));
        bookingsbtn.setBackground(new Color(255,153,0));
        profile.setVisible(false);
        bookingPanel.setVisible(true);
    }//GEN-LAST:event_backToHomeActionPerformed

    private void profileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileBtnActionPerformed
        profile.setVisible(true);
        booking.setVisible(false);
        bookingPanel.setVisible(false);
        editBookingPanel.setVisible(false);
        genSlipPanel.setVisible(false);
        viewCusDetails();
        this.errName.setText("");
        this.errEmail.setText("");
        this.errCon.setText("");
        this.errUname.setText("");
        this.errPass.setText("");
    }//GEN-LAST:event_profileBtnActionPerformed

    private void bookingsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingsbtnActionPerformed
        bookingAllclear();
        profile.setVisible(false);
        booking.setVisible(false);
        bookingPanel.setVisible(true);
        editBookingPanel.setVisible(false);
        genSlipPanel.setVisible(false);
        displayBookingTable(ReservationController.getAllCustomerBookings(cus.getcId()));
    }//GEN-LAST:event_bookingsbtnActionPerformed

    private void newBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBookBtnActionPerformed
        profile.setVisible(false);
        booking.setVisible(true);
        bookingPanel.setVisible(false);
        editBookingPanel.setVisible(false);
        genSlipPanel.setVisible(false);
        setStartTime(0);
        bookingAllclear();
    // LocalTime.now().getHour();
        
    }//GEN-LAST:event_newBookBtnActionPerformed
    
    private void setStartTime(int currentHour){
         // Get current hour
        if(currentHour<8)
            currentHour = 8;
        int size = 22 - currentHour; // Adjust size based on current hour
        String stimeList[] = new String[size];

        // Start the loop from the current hour
        for (int i = 0; i < size; i++) {
            int hour = currentHour + i; // Calculate the hour for this iteration

            // Format the hour and populate the array
            stimeList[i] = String.format("%02d.00", hour);
        }

        // Set the model for the combo box
        stime.setModel(new DefaultComboBoxModel<>(stimeList));
    }
    private void bookingsbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingsbtnMouseEntered
        
    }//GEN-LAST:event_bookingsbtnMouseEntered

    private void bookingsbtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingsbtnMouseReleased
        
    }//GEN-LAST:event_bookingsbtnMouseReleased

    private void newBookBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newBookBtnMouseClicked
        bookingsbtn.setBackground(new Color(255,255,255));
        newBookBtn.setBackground(new Color(255,153,0));
        profileBtn.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_newBookBtnMouseClicked

    private void bookingsbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingsbtnMouseClicked
        bookingsbtn.setBackground(new Color(255,153,0));
        newBookBtn.setBackground(new Color(255,255,255));
        profileBtn.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_bookingsbtnMouseClicked

    private void profileBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileBtnMouseClicked
        profileBtn.setBackground(new Color(255,153,0));
        newBookBtn.setBackground(new Color(255,255,255));
        bookingsbtn.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_profileBtnMouseClicked

    private void backToHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backToHomeMouseClicked
        
        
    }//GEN-LAST:event_backToHomeMouseClicked

    private void bookingSavebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingSavebtnActionPerformed
        Date sdate  = sDate.getDate();
        Date edate = eDate.getDate();
        if(seats.getSelectedItem() == null||stime.getSelectedItem() == null||etime.getSelectedItem() == null||sdate == null){
            JOptionPane.showMessageDialog(this, "Please filled above all fields..");
            errorMsg();
        }else{
            
            
            String sests = seats.getSelectedItem().toString();
            String sTime = stime.getSelectedItem().toString();
            String eTime = etime.getSelectedItem().toString();

            
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH.mm");
            LocalTime starttime = LocalTime.parse(sTime, formatter);
            LocalTime endtime = LocalTime.parse(eTime, formatter);
            LocalDate sd = sdate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDateTime startDateTime = LocalDateTime.of(sd, starttime);
            LocalDateTime endDateTime = LocalDateTime.of(sd, endtime);
            
            
            
            if(tableCount.getSelectedItem()!=null){
                int tablno = Integer.parseInt(tableCount.getSelectedItem().toString());
                Table table = TableController.getTable(tablno);
                if(singleBtn.isSelected()){
                    validateDate();
                    if(ReservationController.makeReservation(table, startDateTime, endDateTime, cus.getcId())){
                        JOptionPane.showMessageDialog(this, "Booking Added..!");
                        bookingAllclear();
                    }
                }
                if(continuosBtn.isSelected()&&edate!=null){
                    validateEndDate();
                    LocalDate ed = edate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    endDateTime = LocalDateTime.of(ed, endtime);
                    if(ReservationController.makeReservation(table, startDateTime, endDateTime, cus.getcId())){
                        JOptionPane.showMessageDialog(this, "Booking Added..!");
                        bookingAllclear();
                    }else{
                        JOptionPane.showMessageDialog(this, "Continues booking not Added..!");
                    }
                }
                if(specialbtn.isSelected()&&edate!=null){
                    LocalDate ed = edate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    endDateTime = LocalDateTime.of(ed, endtime);
                    System.out.println("test");
                    if(countDay()>0){
                        DayOfWeek[] days = new DayOfWeek[countDay()];
                        System.out.println("test");
                        int i =0;
                        if(monday.isSelected())
                            days[i++]=DayOfWeek.MONDAY;
                        if(tuesday.isSelected())
                            days[i++]=DayOfWeek.TUESDAY;
                        if(wednesday.isSelected())
                            days[i++]=DayOfWeek.WEDNESDAY;
                        if(thusday.isSelected())
                            days[i++]=DayOfWeek.THURSDAY;
                        if(friday.isSelected())
                            days[i++]=DayOfWeek.FRIDAY;
                        if(saturday.isSelected())
                            days[i++]=DayOfWeek.SATURDAY;
                        if(sunday.isSelected())
                            days[i++]=DayOfWeek.SUNDAY;
                        if(ReservationController.makeReservation(table, sd, ed, starttime, endtime, days, cus.getcId())){
                            JOptionPane.showMessageDialog(this, "Special Booking Added..!");
                            bookingAllclear();
                        }else
                            JOptionPane.showMessageDialog(this, "Special booking is not added!");
                    }else{
                        JOptionPane.showMessageDialog(this, "Special booking is not added!");
                    }
                }
            }else
                JOptionPane.showMessageDialog(this, "Please select table number.");
            
        }
            
    }//GEN-LAST:event_bookingSavebtnActionPerformed
    private void displayBookingTable(ArrayList<Booking> bookings){
        DefaultTableModel model = (DefaultTableModel) bookingtable.getModel();
        model.setRowCount(0);
        //TableController tCon = new TableController();
        for (Booking b : bookings) {
            Object[] row = {b.getBid(),b.getTable().getTableNumber(),b.getTable().getCapacity(),b.getStartTime().toLocalDate(),b.getStartTime().toLocalTime(),b.getEndTime().toLocalTime(),b.getPstatus()};
            model.addRow(row);
        } 
    }
    private void bookingCancelbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingCancelbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingCancelbtnMouseClicked

    private void bookingCancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingCancelbtnActionPerformed
        bookingPanel.setVisible(false);
        bookingAllclear();
        displayBookingTable(ReservationController.getAllCustomerBookings(cus.getcId()));
        bookingtable.setVisible(true);
    }//GEN-LAST:event_bookingCancelbtnActionPerformed

    private void singleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleBtnActionPerformed
        bookingInitial();
        errorMsg();     
    }//GEN-LAST:event_singleBtnActionPerformed
    private void bookingInitial(){
        singleBtn.setSelected(true);
        continuosBtn.setSelected(false);
        specialbtn.setSelected(false);
        eDate.setEnabled(false);
        edatelb.setEnabled(false);
        daysEnable(false);
        bookingAllclear();
    }
    private void continuosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuosBtnActionPerformed
        singleBtn.setSelected(false);
        continuosBtn.setSelected(true);
        specialbtn.setSelected(false);
        bookingAllclear();
        errorMsg();
        eDate.setEnabled(true);
        edatelb.setEnabled(true);
        daysEnable(false);
    }//GEN-LAST:event_continuosBtnActionPerformed

    private void stimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stimeActionPerformed
        String sTime = stime.getSelectedItem().toString();
        int s = Integer.parseInt(sTime.substring(0, 2)); //08:00
        int size = 20-s;
        String etimeList[]= new String[size];
        stimeerror.setText("");
        etimeerror.setText("Please select end time.");
        for (int i = 0; i < size; i++) {
            etimeList[i] = String.format("%02d.00", i+s+1);
                
        }
        
        etime.setModel(new DefaultComboBoxModel<>(etimeList));
    }//GEN-LAST:event_stimeActionPerformed
    private void bookingValidation(){
        
        Date sdate  = sDate.getDate();
        Date edate = eDate.getDate();
        
        if(seats.getSelectedItem() == null||stime.getSelectedItem() == null||etime.getSelectedItem() == null||sdate == null){
            //JOptionPane.showMessageDialog(this, "Please filled above all fields..");
            errorMsg();
        }else{
            String sests = seats.getSelectedItem().toString();
            String sTime = stime.getSelectedItem().toString();
            String eTime = etime.getSelectedItem().toString();

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH.mm");
            LocalTime starttime = LocalTime.parse(sTime, formatter);
            LocalTime endtime = LocalTime.parse(eTime, formatter);
            LocalDate sd = sdate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDateTime startDateTime = LocalDateTime.of(sd, starttime);
            LocalDateTime endDateTime = LocalDateTime.of(sd, endtime);
            ReservationController rv = new ReservationController();
            ArrayList<String>tables = new ArrayList<>();
            if(singleBtn.isSelected()){
                for (Table availableTable : rv.getAvailableTables(Integer.parseInt(sests), startDateTime, endDateTime)) {
                   tables.add(availableTable.getTableNumber()+"");
                }
            }
            if(continuosBtn.isSelected()&&edate!=null){
                LocalDate ed = edate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                endDateTime = LocalDateTime.of(ed, endtime);
                for (Table availableTable : rv.getAvailableTables(Integer.parseInt(sests), startDateTime, endDateTime)) {
                   tables.add(availableTable.getTableNumber()+"");
                }
            }
            if(specialbtn.isSelected()&&edate!=null){
                LocalDate ed = edate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                endDateTime = LocalDateTime.of(ed, endtime);
                if(countDay()>0){
                    DayOfWeek[] days = new DayOfWeek[countDay()];
                    int i =0;
                    if(monday.isSelected())
                        days[i++]=DayOfWeek.MONDAY;
                    if(tuesday.isSelected())
                        days[i++]=DayOfWeek.TUESDAY;
                    if(wednesday.isSelected())
                        days[i++]=DayOfWeek.WEDNESDAY;
                    if(thusday.isSelected())
                        days[i++]=DayOfWeek.THURSDAY;
                    if(friday.isSelected())
                        days[i++]=DayOfWeek.FRIDAY;
                    if(saturday.isSelected())
                        days[i++]=DayOfWeek.SATURDAY;
                    if(sunday.isSelected())
                        days[i++]=DayOfWeek.SUNDAY;
                    for (Table availableTable : rv.getAvailableTablesForSpecificDays(Integer.parseInt(sests), starttime, endtime, sd, ed, days)) {
                        tables.add(availableTable.getTableNumber()+"");
                    }
                }else{
                    for (Table availableTable : rv.getAvailableTables(Integer.parseInt(sests), startDateTime, endDateTime)) {
                        tables.add(availableTable.getTableNumber()+"");
                    }
                }
            }
            String[] tableArray = tables.toArray(new String[0]);
            if(tableArray.length==0)
                JOptionPane.showMessageDialog(this, "Not available.");
            else
                //errormsg.setText("");
                tableCount.setModel(new DefaultComboBoxModel<>(tableArray));
            
        }
    }
    private void stimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stimeMouseClicked
        
    }//GEN-LAST:event_stimeMouseClicked

    private void sundayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sundayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sundayActionPerformed

    private void mondayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mondayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mondayActionPerformed

    private void tuesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tuesdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tuesdayActionPerformed

    private void wednesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wednesdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wednesdayActionPerformed

    private void thusdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thusdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thusdayActionPerformed

    private void fridayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fridayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fridayActionPerformed

    private void specialbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialbtnActionPerformed
        singleBtn.setSelected(false);
        continuosBtn.setSelected(false);
        specialbtn.setSelected(true);
        bookingAllclear();
        errorMsg();
        eDate.setEnabled(true);
        edatelb.setEnabled(true);
        daysEnable(true);
    }//GEN-LAST:event_specialbtnActionPerformed

    private void tableCountMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCountMouseEntered
        tableCountClear();
        if(singleBtn.isSelected()){
            validateDate();
            bookingValidation();
            //tableError.setText("Select table.");
        }
        else{
            validateEndDate();
            bookingValidation();
            //tableError.setText("Select table.");
        }
        //bookingValidation();
    }//GEN-LAST:event_tableCountMouseEntered

    private void saturdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saturdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saturdayActionPerformed

    private void seatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatsActionPerformed
        seaterror.setText("");
    }//GEN-LAST:event_seatsActionPerformed

    private void sDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sDateKeyTyped
       
    
    }//GEN-LAST:event_sDateKeyTyped

    private void sDateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sDateKeyReleased
        
    }//GEN-LAST:event_sDateKeyReleased

    private void eDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eDateKeyTyped
        
    }//GEN-LAST:event_eDateKeyTyped

    private void etimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_etimeActionPerformed
        etimeerror.setText("");
    }//GEN-LAST:event_etimeActionPerformed

    private void sDateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sDateMouseReleased
       
    }//GEN-LAST:event_sDateMouseReleased

    private void sDateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sDateMouseExited
        
    }//GEN-LAST:event_sDateMouseExited

    private void tableCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableCountActionPerformed
        errorMsg();
        if(tableCount.getSelectedItem()==null)
            tableError.setText("Select table number.");
    }//GEN-LAST:event_tableCountActionPerformed

    private void seatsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seatsMouseEntered
        errorMsg();
    }//GEN-LAST:event_seatsMouseEntered

    private void seatsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seatsMouseExited
        errorMsg();
    }//GEN-LAST:event_seatsMouseExited

    private void stimeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stimeMouseEntered
        errorMsg();
    }//GEN-LAST:event_stimeMouseEntered

    private void stimeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stimeMouseExited
        errorMsg();
    }//GEN-LAST:event_stimeMouseExited

    private void etimeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_etimeMouseEntered
        errorMsg();
    }//GEN-LAST:event_etimeMouseEntered

    private void etimeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_etimeMouseExited
        errorMsg();
    }//GEN-LAST:event_etimeMouseExited

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        String rid = bidField.getText();
        Booking booking = ReservationController.getBookingById(Integer.parseInt(rid));
        LocalDate ndate = LocalDate.now();
        if(rid.equals(""))
            JOptionPane.showMessageDialog(null, "Select reservation first.");
        else{
            if(!ndate.isBefore(booking.getEndTime().toLocalDate())&&booking.getPstatus().equals("Pending")){
                JOptionPane.showMessageDialog(this, "You should have to pay for reseravtion.");
            }else{
                if(ReservationController.cancelReservation(Integer.parseInt(rid))){
                    JOptionPane.showMessageDialog(this, "Reservation removed..!");
                    displayBookingTable(ReservationController.getAllCustomerBookings(cus.getcId()));
                    bidField.setText("");

                }else
                    JOptionPane.showMessageDialog(this, "Reservation not removed..!");
            }
        }
            
        
        
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void bidFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bidFieldMouseEntered
      
    }//GEN-LAST:event_bidFieldMouseEntered

    private void bookingtableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingtableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_bookingtableMouseEntered

    private void bookingtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingtableMouseClicked
       bookingRowData();
    }//GEN-LAST:event_bookingtableMouseClicked

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        bidField.setText("");
        
    }//GEN-LAST:event_clearBtnActionPerformed

    private void bidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidFieldActionPerformed
        errorMsg();
    }//GEN-LAST:event_bidFieldActionPerformed

    private void bidFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bidFieldKeyTyped
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c)){
            evt.consume(); 
        }
    }//GEN-LAST:event_bidFieldKeyTyped

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameActionPerformed

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void npassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_npassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_npassActionPerformed

    private void editBIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editBIDActionPerformed

    private void editUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUpdateBtnActionPerformed
          String id = editBID.getText();
          String tno = editTableNo.getText();
          String date = editDate.getText();
          String stime = editStime.getSelectedItem().toString();
          String etime = editEtime.getSelectedItem().toString();
          
          LocalDateTime newStartDateTime = LocalDateTime.of(LocalDate.parse(date),LocalTime.parse(stime));
          LocalDateTime newEndDateTime = LocalDateTime.of(LocalDate.parse(date),LocalTime.parse(etime));
          
          if(ReservationController.updateReservation(Integer.parseInt(id), Integer.parseInt(tno), newStartDateTime, newEndDateTime)){
              JOptionPane.showMessageDialog(null, "Booking updated..!");
              displayBookingTable(ReservationController.getAllCustomerBookings(cus.getcId()));
              editBookingPanel.setVisible(false);
              bookingPanel.setVisible(true);
          }else{
              JOptionPane.showMessageDialog(null, "Booking not updated..!");
          }
    
    }//GEN-LAST:event_editUpdateBtnActionPerformed

    private void editSeatNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSeatNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editSeatNoActionPerformed

    private void editDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editDateActionPerformed

    private void cancelEditBookingbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelEditBookingbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelEditBookingbtnMouseClicked

    private void cancelEditBookingbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelEditBookingbtnActionPerformed
        displayBookingTable(ReservationController.getAllCustomerBookings(cus.getcId()));
        editBookingPanel.setVisible(false);
        bookingPanel.setVisible(true);
    }//GEN-LAST:event_cancelEditBookingbtnActionPerformed

    private void editStimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editStimeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_editStimeMouseClicked

    private void editStimeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editStimeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_editStimeMouseEntered

    private void editStimeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editStimeMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_editStimeMouseExited

    private void editStimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editStimeActionPerformed
        String time = editStime.getSelectedItem().toString();
        int s = Integer.parseInt(time.substring(0, 2)); //08:00
        int size = 20-s;
        String etimeList[]= new String[size];
        for (int i = 0; i < size; i++) {
            etimeList[i] = String.format("%02d:00", i+s+1);
                
        }
        
        editEtime.setModel(new DefaultComboBoxModel<>(etimeList));
    }//GEN-LAST:event_editStimeActionPerformed

    private void editEtimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editEtimeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_editEtimeMouseClicked

    private void editEtimeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editEtimeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_editEtimeMouseEntered

    private void editEtimeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editEtimeMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_editEtimeMouseExited

    private void editEtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editEtimeActionPerformed

    private void editPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editPayActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        String rid = bidField.getText();
        Booking booking = ReservationController.getBookingById(Integer.parseInt(rid));
        LocalDate ndate = LocalDate.now();
        if(rid.equals(""))
            JOptionPane.showMessageDialog(null, "Select reservation first.");
        else{
            if(ndate.isBefore(booking.getStartTime().toLocalDate())){
                bookingPanel.setVisible(false);
                getBookingDataToUpdate(Integer.parseInt(rid));
            }else{
                JOptionPane.showMessageDialog(null, "You can't change reservation now.");
            }
            
        }
    }//GEN-LAST:event_editbtnActionPerformed

    private void editTableNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTableNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editTableNoActionPerformed

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
        String text = name.getText();
        if (text.startsWith(" ")) {
            errName.setText("Cannot enter spaces first.");
        }else
            errName.setText("");
    }//GEN-LAST:event_nameKeyReleased

    private void mailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mailKeyReleased
        Pattern emailPattern = Pattern.compile("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$");
        String text = mail.getText();
        Matcher matcher = emailPattern.matcher(text);
        if (!matcher.matches()) {
            errEmail.setText("Invalid email address.");
        }else
            errEmail.setText("");
    }//GEN-LAST:event_mailKeyReleased

    private void contactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactKeyReleased
        Pattern numberp = Pattern.compile("^0\\d{9}$");
        String text = contact.getText();
        Matcher matcher = numberp.matcher(text);
        if (!matcher.matches()) {
            errCon.setText("Invalid number.");
        }else
            errCon.setText("");
    }//GEN-LAST:event_contactKeyReleased

    private void unameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unameKeyReleased
       String text = uname.getText();
        if (text.startsWith(" ")) {
            errUname.setText("Cannot enter spaces first.");
        }else
            errUname.setText("");
    }//GEN-LAST:event_unameKeyReleased

    private void npassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_npassKeyReleased
        Pattern numberp = Pattern.compile("^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$_%^&+=!]).{6,10}$");
        char[] passwordChars = npass.getPassword();
        String text = new String(passwordChars);
        Matcher matcher = numberp.matcher(text);
        if(text.isBlank())
            errPass.setText("");
        else{
            if (!matcher.matches()) {
            errPass.setText("Password must be 6-10 chars with upper, lower, digit, and special char.");
            }else
                errPass.setText("");
            }   
    }//GEN-LAST:event_npassKeyReleased

    private void genSlipbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genSlipbtnActionPerformed
        String rid = bidField.getText();
        
        if(rid.equals(""))
            JOptionPane.showMessageDialog(null, "Select reservation first.");
        else{
            bookingPanel.setVisible(false);
            getSlip(Integer.parseInt(rid));
        }
    }//GEN-LAST:event_genSlipbtnActionPerformed

    private void payBIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payBIDActionPerformed

    private void downSlipBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downSlipBtnActionPerformed
        String text = paystatus.getText();
        
        if(text.equals("Paid")){
            int id = Integer.parseInt(payBID.getText());
            Booking booking = ReservationController.getBookingById(id);
            int cid = Integer.parseInt(booking.getCusId());
            int seats = booking.getTable().getCapacity();
            String date = booking.getStartTime().toLocalDate().toString();
            String stime = booking.getStartTime().toLocalTime().toString();
            String etime = booking.getEndTime().toLocalTime().toString();
            
            PaymentAndReport.generateSlip(id, cid, seats, date, stime, etime);
            
        }else{
            JOptionPane.showMessageDialog(null, "You have to pay first to get slip.");
        }
        
    }//GEN-LAST:event_downSlipBtnActionPerformed

    private void payDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payDateActionPerformed

    private void paySeatNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paySeatNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paySeatNoActionPerformed

    private void cancelPayBookingbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPayBookingbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelPayBookingbtnMouseClicked

    private void cancelPayBookingbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPayBookingbtnActionPerformed
        genSlipPanel.setVisible(false);
        bookingPanel.setVisible(true);
    }//GEN-LAST:event_cancelPayBookingbtnActionPerformed

    private void payHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payHoursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payHoursActionPerformed

    private void payTableNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payTableNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payTableNoActionPerformed

    private void paytimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paytimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paytimeActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentActionPerformed

    private void paystatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paystatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paystatusActionPerformed

    private void cancelBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseEntered
        cancelBtn.setBackground(Color.red);
    }//GEN-LAST:event_cancelBtnMouseEntered

    private void cancelBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseExited
        cancelBtn.setBackground(Color.white);
    }//GEN-LAST:event_cancelBtnMouseExited
    
    private void errorMsg(){
        if(seats.getSelectedItem()==null)
            seaterror.setText("Please select seats.");
        else
            seaterror.setText("");
        if(stime.getSelectedItem()==null)
            stimeerror.setText("Please select start time.");
        else
            stimeerror.setText("");
        if(etime.getSelectedItem()==null)
            etimeerror.setText("Please select start time first.");
        else
            etimeerror.setText("");
        if(tableCount.getSelectedItem()==null)
            tableError.setText("Please selected above all fields first");
        else
            tableError.setText("");
 
    }
    private void errorMsgClear(){
        seaterror.setText("");
        stimeerror.setText("");
        etimeerror.setText("");
        tableError.setText("");
        bidField.setText("");
    }
    private void setDateNull(){
        sDate.setDate(null);
        eDate.setDate(null);
    }
    public void bookingRowData(){
        int r = bookingtable.getSelectedRow();
        String id = bookingtable.getValueAt(r, 0).toString();
        bidField.setText(id);
    }
    private void validateDate() {
    Date sdate = sDate.getDate();

    if (sdate != null) { // Check if a date is selected
        LocalDate selectedDate = sdate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate currentDate = LocalDate.now();

        if (selectedDate.isBefore(currentDate)) {
            // Display message indicating the selected date is in the past
            JOptionPane.showMessageDialog(this, "Please select a future date.", "Invalid Date", JOptionPane.WARNING_MESSAGE);
            sDate.setDate(null); // Clear the date field or handle it according to your application's logic
        }

    }else{
        JOptionPane.showMessageDialog(this, "Please select a start date.", "Invalid Date", JOptionPane.WARNING_MESSAGE);
        tableCount.setSelectedItem(null);
    }
}
    private void validateEndDate() {
        Date sdate = sDate.getDate();
        Date edate = eDate.getDate();
        validateDate();
        if (sdate != null) { // Check if a date is selected
            LocalDate selectedDate = sdate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            if(edate!=null){
                LocalDate selectedendDate = edate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                if (selectedendDate.isBefore(selectedDate)) {
                    // Display message indicating the selected date is in the past
                    JOptionPane.showMessageDialog(this, "Please select valid EndDate.", "Invalid Date", JOptionPane.WARNING_MESSAGE);
                    eDate.setDate(null); // Clear the date field or handle it according to your application's logic
                }
            }else{
                JOptionPane.showMessageDialog(this, "Please select a end date.", "Invalid Date", JOptionPane.WARNING_MESSAGE);
                tableCount.setSelectedItem(null);
            }


        }
    }
    
private void daysEnable(boolean t){
    monday.setEnabled(t);
    tuesday.setEnabled(t);
    wednesday.setEnabled(t);
    thusday.setEnabled(t);
    friday.setEnabled(t);
    saturday.setEnabled(t);
    sunday.setEnabled(t);
}
private int countDay(){
    int count=0;
    if(monday.isSelected())
        ++count;
    if(tuesday.isSelected())
        ++count;
    if(wednesday.isSelected())
        ++count;
    if(thusday.isSelected())
        ++count;
    if(friday.isSelected())
        ++count;
    if(saturday.isSelected())
        ++count;
    if(sunday.isSelected())
        ++count;
    return count;
}
private void setDaysclear(){
    monday.setSelected(false);
    tuesday.setSelected(false);
    wednesday.setSelected(false);
    thusday.setSelected(false);
    friday.setSelected(false);
    saturday.setSelected(false);
    sunday.setSelected(false);
}
private void tableCountClear(){
    String[] tableArray = new String[0];
    tableCount.setModel(new DefaultComboBoxModel<>(tableArray));
}
private void bookingAllclear(){
    setDateNull();
    setDaysclear();
    errorMsgClear();
    tableCountClear();
}
private void getBookingDataToUpdate(int bid){
    Booking booking = ReservationController.getBookingById(bid);
    editBID.setEditable(false);
    editBookingPanel.setVisible(true);
    editTableNo.setEditable(false);
    editSeatNo.setEditable(false);
    editDate.setEditable(false);
    editPay.setEditable(false);
    
    editBID.setText(bid+"");
    editTableNo.setText(booking.getTable().getTableNumber()+"");
    editSeatNo.setText(booking.getTable().getCapacity()+"");
    editDate.setText(booking.getStartTime().toLocalDate().toString());
    editPay.setText(booking.getPstatus());
    
    editStime.setSelectedItem(booking.getStartTime().toLocalTime().toString());
    editEtime.setSelectedItem(booking.getEndTime().toLocalTime().toString());
    
}
private void getSlip(int bid){
    Booking booking = ReservationController.getBookingById(bid);
    genSlipPanel.setVisible(true);
    payBID.setEditable(false);
    payTableNo.setEditable(false);
    paySeatNo.setEditable(false);
    payDate.setEditable(false);
    paytime.setEditable(false);
    payment.setEditable(false);
    paystatus.setEditable(false);
    
    payBID.setText(bid+"");
    payTableNo.setText(booking.getTable().getTableNumber()+"");
    payDate.setText(booking.getStartTime().toLocalDate().toString());
    paystatus.setText(booking.getPstatus());
    int seats = booking.getTable().getCapacity();
    String status = booking.getPstatus();
    String stime = booking.getStartTime().toLocalTime().toString();
    String etime = booking.getEndTime().toLocalTime().toString();
    int hours = (int)PaymentAndReport.getHours(stime, etime);
    paySeatNo.setText(seats+"");
    paytime.setText(stime+"-"+etime);
    payHours.setText(hours+"");
    
    String pay = String.format("Rs %.2f", PaymentAndReport.getSubtotal(seats, hours));
    payment.setText(pay);
    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CusHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CusHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CusHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CusHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CusHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToHome;
    private javax.swing.JLabel bg;
    private javax.swing.JTextField bidField;
    private javax.swing.JPanel booking;
    private javax.swing.JButton bookingCancelbtn;
    private javax.swing.JPanel bookingPanel;
    private javax.swing.JButton bookingSavebtn;
    private javax.swing.JButton bookingsbtn;
    private javax.swing.JTable bookingtable;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton cancelEditBookingbtn;
    private javax.swing.JButton cancelPayBookingbtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField contact;
    private javax.swing.JRadioButton continuosBtn;
    private javax.swing.JLabel cusname;
    private javax.swing.JButton downSlipBtn;
    private com.toedter.calendar.JDateChooser eDate;
    private javax.swing.JLabel edatelb;
    private javax.swing.JTextField editBID;
    private javax.swing.JPanel editBookingPanel;
    private javax.swing.JTextField editDate;
    private javax.swing.JComboBox<String> editEtime;
    private javax.swing.JTextField editPay;
    private javax.swing.JTextField editSeatNo;
    private javax.swing.JComboBox<String> editStime;
    private javax.swing.JTextField editTableNo;
    private javax.swing.JButton editUpdateBtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JLabel errCon;
    private javax.swing.JLabel errEmail;
    private javax.swing.JLabel errName;
    private javax.swing.JLabel errPass;
    private javax.swing.JLabel errUname;
    private javax.swing.JLabel errormsg2;
    private javax.swing.JComboBox<String> etime;
    private javax.swing.JLabel etimeerror;
    private javax.swing.JCheckBox friday;
    private javax.swing.JPanel genSlipPanel;
    private javax.swing.JButton genSlipbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JTextField mail;
    private javax.swing.JCheckBox monday;
    private javax.swing.JTextField name;
    private javax.swing.JButton newBookBtn;
    private javax.swing.JPasswordField npass;
    private javax.swing.JPasswordField pass;
    private javax.swing.JTextField payBID;
    private javax.swing.JTextField payDate;
    private javax.swing.JTextField payHours;
    private javax.swing.JTextField paySeatNo;
    private javax.swing.JTextField payTableNo;
    private javax.swing.JTextField payment;
    private javax.swing.JTextField paystatus;
    private javax.swing.JTextField paytime;
    private javax.swing.JPanel profile;
    private javax.swing.JButton profileBtn;
    private com.toedter.calendar.JDateChooser sDate;
    private javax.swing.JCheckBox saturday;
    private javax.swing.JButton save;
    private javax.swing.JLabel seaterror;
    private javax.swing.JComboBox<String> seats;
    private javax.swing.JRadioButton singleBtn;
    private javax.swing.JPanel special;
    private javax.swing.JRadioButton specialbtn;
    private javax.swing.JComboBox<String> stime;
    private javax.swing.JLabel stimeerror;
    private javax.swing.JCheckBox sunday;
    private javax.swing.JComboBox<String> tableCount;
    private javax.swing.JLabel tableError;
    private javax.swing.JCheckBox thusday;
    private javax.swing.JCheckBox tuesday;
    private javax.swing.JTextField uname;
    private javax.swing.JCheckBox wednesday;
    // End of variables declaration//GEN-END:variables
}
